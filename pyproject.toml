[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
authors = [{ name = "Dan SÃ¸ndergaard", email = "das@genome.au.dk" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: System :: Distributed Computing",
    "Topic :: Utilities",
]
dynamic = ["version", "description"]
name = "gwf"
readme = "README.rst"
requires-python = ">=3.8"

[project.scripts]
gwf = "gwf.cli:main"

[project.entry-points."gwf.plugins"]
cancel = "gwf.plugins.cancel:cancel"
clean = "gwf.plugins.clean:clean"
config = "gwf.plugins.config:config"
info = "gwf.plugins.info:info"
logs = "gwf.plugins.logs:logs"
run = "gwf.plugins.run:run"
status = "gwf.plugins.status:status"
touch = "gwf.plugins.touch:touch"
workers = "gwf.plugins.workers:workers"

[project.entry-points."gwf.backends"]
local = "gwf.backends.local:setup"
sge = "gwf.backends.sge:setup"
slurm = "gwf.backends.slurm:setup"
lsf = "gwf.backends.lsf:setup"
pbs = "gwf.backends.pbs:setup"

[project.urls]
Home = "https://gwf.app"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
click = "*"
click-plugins = "*"
attrs = "*"
prettyprinter = "*"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev", "test"], solve-group = "default" }

[tool.pixi.feature.dev.dependencies]
ruff = ">=0.9.4,<0.10"
sphinx = ">=8.1.3,<9"
sphinx-autobuild = ">=2024.10.3,<2025"
furo = ">=2024.8.6,<2025"
flit = ">=3.10.1,<4"
anaconda-client = ">=1.12.3,<2"
conda-build = ">=25.1.2,<26"

[tool.pixi.feature.dev.pypi-dependencies]
gwf = { path = ".", editable = true }

[tool.pixi.feature.test.dependencies]
pytest = ">=8.3.4,<9"
pytest-click = ">=1.1.0,<2"
pytest-mock = ">=3.14.0,<4"
pytest-runner = ">=6.0.0,<7"
pytest-asyncio = ">=0.25.3,<0.26"

[tool.pixi.feature.dev.tasks]
format = "ruff format $PIXI_PROJECT_ROOT/src"
lint = "ruff check $PIXI_PROJECT_ROOT/src"
build = "cd $PIXI_PROJECT_ROOT/conda; conda build --output-folder . ."
publish = "cd $PIXI_PROJECT_ROOT/conda; anaconda upload --user gwforg $(conda-build --output .)"

preview-docs = "cd $PIXI_PROJECT_ROOT/docs; sphinx-autobuild --open-browser -b dirhtml . _build/dirhtml"
build-docs = "cd $PIXI_PROJECT_ROOT/docs; sphinx-build -b dirhtml . _build/dirhtml"

[tool.pixi.feature.test.tasks]
test = "pytest tests/"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
